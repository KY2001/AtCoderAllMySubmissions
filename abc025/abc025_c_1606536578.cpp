/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Kein Yukiyoshi
 */

// clang-format off
//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx")
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define stoi stoll
#define Endl endl
#define itn int
#define fi first
#define se second
#define rep(i, n) for(int i=0, i##_len=(n); i<i##_len; i++)
#define rep2(i, a, b) for (int i = (int)(a), i##_len=(b); i < i##_len; i++)
#define rep3(i, a, b) for (int i = (int)(a), i##_len=(b); i >= i##_len; i--)
#define FOR(i, a) for (auto &i: a)
#define ALL(obj) begin(obj), end(obj)
#define _max(x) *max_element(ALL(x))
#define _min(x) *min_element(ALL(x))
#define _sum(x) accumulate(ALL(x), 0LL)
#define LOWER_BOUND(A, key) distance(begin(A), lower_bound(ALL(A), key))
#define UPPER_BOUND(A, key) distance(begin(A), upper_bound(ALL(A), key))

const int MOD    = 998244353;
const int MOD2   = 1000000007;
const int INF    = (int)(1e13 + 7);
const double EPS = 1e-14;
const double PI  = 3.14159265358979;
template <class T> using V = vector<T>;
template <class T> using VV = vector<vector<T>>;
template <class T> using VVV = vector<vector<vector<T>>>;
template <class T, class S>  using P = pair<T, S>;
template<class T> bool chmax(T &a, const T &b) {if (a < b) {a = b;return true;}return false;}
template<class T> bool chmin(T &a, const T &b) {if (b < a) {a = b;return true;}return false;}
int _ceil(int a, int b) { return (a >= 0 ? (a + (b - 1)) / b : (a - (b - 1)) / b); }
int _mod(int &a) {a = a >= 0 ? a % MOD : a - (MOD * _ceil(a, MOD));return a;}
int _pow(int a, int b) {int res = 1;for (a %= MOD; b; a = a * a % MOD, b >>= 1)if (b & 1) res = res * a % MOD;return res;}
// clang-format on

int b[2][3];
int c[3][2];
int grid[3][3];

int calc() {
  int ret = 0;
  rep(i, 2) rep(j, 3) if (grid[i][j] == grid[i + 1][j]) ret += b[i][j];
  rep(i, 3) rep(j, 2) if (grid[i][j] == grid[i][j + 1]) ret += c[i][j];
  return ret;
}

int bfs(int now = 0) {
  if (now == 9) {
    return calc();
  } else if (now % 2) {
    int mini = INF;
    rep(i, 3) rep(j, 3) {
      if (grid[i][j] != -1) continue;
      grid[i][j] = 0;
      chmin(mini, bfs(now + 1));
      grid[i][j] = -1;
    }
    return mini;
  } else {
    int maxi = -INF;
    rep(i, 3) rep(j, 3) {
      if (grid[i][j] != -1) continue;
      grid[i][j] = 1;
      chmax(maxi, bfs(now + 1));
      grid[i][j] = -1;
    }
    return maxi;
  }
}

class C {
public:
  static void solve(istream &cin, ostream &cout) {
    cin.tie(nullptr);
    cout.tie(nullptr);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(15);
    int sum = 0;
    rep(i, 2) rep(j, 3) {
      cin >> b[i][j];
      sum += b[i][j];
    }
    rep(i, 3) rep(j, 2) {
      cin >> c[i][j];
      sum += c[i][j];
    }
    rep(i, 3) rep(j, 3) grid[i][j] = -1;
    int ans                        = bfs();
    cout << ans << endl;
    cout << sum - ans << endl;
  }
};


signed main() {
  C solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}
