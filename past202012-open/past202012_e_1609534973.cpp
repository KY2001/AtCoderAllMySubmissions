/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Kein Yukiyoshi
 */

// clang-format off
//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx")
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define stoi stoll
#define Endl endl
#define itn int
#define fi first
#define se second
#define rep(i, n) for(int i=0, i##_len=(n); i<i##_len; i++)
#define rep2(i, a, b) for (int i = (int)(a), i##_len=(b); i < i##_len; i++)
#define rep3(i, a, b) for (int i = (int)(a), i##_len=(b); i >= i##_len; i--)
#define FOR(i, a) for (auto &i: a)
#define ALL(obj) begin(obj), end(obj)
#define _max(x) *max_element(ALL(x))
#define _min(x) *min_element(ALL(x))
#define _sum(x) accumulate(ALL(x), 0LL)

const int MOD   = 1000000007;
// const int MOD    = 998244353;
const int INF    = (int)(1e13 + 7);
const double EPS = 1e-8;
const double PI  = 3.14159265358979;
template <class T> using V = vector<T>;
template <class T> using VV = vector<vector<T>>;
template <class T> using VVV = vector<vector<vector<T>>>;
template <class T, class S>  using P = pair<T, S>;
template<class T> bool chmax(T &a, const T &b) {if (a < b) {a = b;return true;}return false;}
template<class T> bool chmin(T &a, const T &b) {if (b < a) {a = b;return true;}return false;}
int _ceil(int a, int b) { return (a >= 0 ? (a + (b - 1)) / b : (a - (b - 1)) / b); }
int _mod(int a) {return a >= 0 ? a % MOD : a - (MOD * _ceil(a, MOD));}
int _pow(int a, int b) {int res = 1;for (a %= MOD; b; a = a * a % MOD, b >>= 1)if (b & 1) res = res * a % MOD;return res;}
struct mint {long long x;mint(long long x = 0) : x((x % MOD + MOD) % MOD) {}mint operator-() const { return mint(-x); }mint &operator+=(const mint a) {if ((x += a.x) >= MOD) x -= MOD;return *this;}mint &operator-=(const mint a) {if ((x += MOD - a.x) >= MOD) x -= MOD;return *this;}mint &operator*=(const mint a) { (x *= a.x) %= MOD;return *this; }mint operator+(const mint a) const { return mint(*this) += a; }mint operator-(const mint a) const { return mint(*this) -= a; } mint operator*(const mint a) const { return mint(*this) *= a; }mint pow(long long t) const {if (!t) return 1;mint a = pow(t >> 1);a *= a;if (t & 1) a *= *this;return a;}mint inv() const { return pow(MOD - 2); }mint &operator/=(const mint a) { return *this *= a.inv(); }mint operator/(const mint a) const { return mint(*this) /= a; }};istream &operator>>(istream &is, mint &a) { return is >> a.x; }ostream &operator<<(ostream &os, const mint &a) { return os << a.x; }
// clang-format on

V<string> rotation(V<string> &S) {
  int h = S.size(), w = S[0].size();
  V<string> s(w);
  rep(i, w) s[i] = string(h, '#');
  rep(i, w) rep(j, h) {
    s[i][j] = S[h - 1 - j][i];
  }
  return s;
}

class E {
public:
  static void solve(istream &cin, ostream &cout) {
    cin.tie(nullptr);
    cout.tie(nullptr);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(15);
    int H, W;
    cin >> H >> W;
    V<string> S(H + 40);
    V<string> T(H);
    rep(i, H) cin >> S[i + 20];
    rep(i, H) cin >> T[i];
    rep(i, 40 + H) {
      if (S[i].empty()) {
        S[i] = string(W + 40, '.');
      } else {
        S[i] = string(20, '.') + S[i] + string(20, '.');
      }
    }
    rep(i, W + 40 - T.size() + 1) rep(j, H + 40 - T[0].size() + 1) {
      rep(k, T.size()) rep(l, T[0].size()) {
        if (T[k][l] == '#' and !(20 <= i + k and i + k <= W + 19 and 20 <= j + l and j + l <= H + 19)) {
          goto label;
        }
      }
      rep(k, T.size()) rep(l, T[0].size()) {
        if (S[i + k][j + l] == '#' and T[k][l] == '#') {
          goto label;
        } else if (k == T.size() - 1 and l == T[0].size() - 1) {
          cout << "Yes" << endl;
          return;
        }
      }
    label:;
    }
    T = rotation(T);
    rep(i, W + 40 - T.size() + 1) rep(j, H + 40 - T[0].size() + 1) {
      rep(k, T.size()) rep(l, T[0].size()) {
        if (T[k][l] == '#' and !(20 <= i + k and i + k <= W + 19 and 20 <= j + l and j + l <= H + 19)) {
          goto label2;
        }
      }
      rep(k, T.size()) rep(l, T[0].size()) {
        if (S[i + k][j + l] == '#' and T[k][l] == '#') {
          goto label2;
        } else if (k == T.size() - 1 and l == T[0].size() - 1) {
          cout << "Yes" << endl;
          return;
        }
      }
    label2:;
    }
    T = rotation(T);
    rep(i, W + 40 - T.size() + 1) rep(j, H + 40 - T[0].size() + 1) {
      rep(k, T.size()) rep(l, T[0].size()) {
        if (T[k][l] == '#' and !(20 <= i + k and i + k <= W + 19 and 20 <= j + l and j + l <= H + 19)) {
          goto label3;
        }
      }
      rep(k, T.size()) rep(l, T[0].size()) {
        if (S[i + k][j + l] == '#' and T[k][l] == '#') {
          goto label3;
        } else if (k == T.size() - 1 and l == T[0].size() - 1) {
          cout << "Yes" << endl;
          return;
        }
      }
    label3:;
    }
    T = rotation(T);
    rep(i, W + 40 - T.size() + 1) rep(j, H + 40 - T[0].size() + 1) {
      rep(k, T.size()) rep(l, T[0].size()) {
        if (T[k][l] == '#' and !(20 <= i + k and i + k <= W + 19 and 20 <= j + l and j + l <= H + 19)) {
          goto label4;
        }
      }
      rep(k, T.size()) rep(l, T[0].size()) {
        if (S[i + k][j + l] == '#' and T[k][l] == '#') {
          goto label4;
        } else if (k == T.size() - 1 and l == T[0].size() - 1) {
          cout << "Yes" << endl;
          return;
        }
      }
    label4:;
    }
    cout << "No" << endl;
  }
};


signed main() {
  E solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}
</pre>

			<h4>
				Submission Info
				
			</h4>
			
			<div class="panel panel-default"><table class="table table-bordered table-striped">
				<tr>
					<th class="col-sm-4">Submission Time</th>
					<td class="text-center"><time class='fixtime fixtime-second'>2021-01-02 06:02:53+0900</time></td>
				</tr>
				<tr>
					<th>Task</th>
					<td class="text-center"><a href="/contests/past202012-open/tasks/past202012_e">E - Stamp</a></td>
				</tr>
				<tr>
					<th>User</th>
					<td class="text-center"><a href="/users/KY2001">KY2001</a> <a href='/contests/past202012-open/submissions?f.User=KY2001'><span class='glyphicon glyphicon-search black' aria-hidden='true' data-toggle='tooltip' title='view KY2001's submissions'></span></a></td>
				</tr>
				<tr>
					<th>Language</th>
					<td class="text-center">C++ (GCC 9.2.1)</td>
				</tr>
				<tr>
					<th>Score</th>
					<td class="text-center">0</td>
				</tr>
				<tr>
					<th>Code Size</th>
					<td class="text-center">5763 Byte</td>
				</tr>
				<tr>
					<th>Status</th>
					<td id="judge-status" class="text-center"><span class='label label-warning' data-toggle='tooltip' data-placement='top' title="Wrong Answer">WA</span></td>
				</tr>
				
					<tr>
						<th>Exec Time</th>
						<td class="text-center">7 ms</td>
					</tr>
					<tr>
						<th>Memory</th>
						<td class="text-center">3648 KB</td>
					</tr>
				
			</table></div>

			
				<h4>Compile Error</h4>
				<pre>./Main.cpp: In static member function ‘static void E::solve(std::istream&, std::ostream&)’:
./Main.cpp:83:22: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   83 |         } else if (k == T.size() - 1 and l == T[0].size() - 1) {
      |                    ~~^~~~~~~~~~~~~~~
./Main.cpp:83:44: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   83 |         } else if (k == T.size() - 1 and l == T[0].size() - 1) {
      |                                          ~~^~~~~~~~~~~~~~~~~~
./Main.cpp:100:22: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  100 |         } else if (k == T.size() - 1 and l == T[0].size() - 1) {
      |                    ~~^~~~~~~~~~~~~~~
./Main.cpp:100:44: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  100 |         } else if (k == T.size() - 1 and l == T[0].size() - 1) {
      |                                          ~~^~~~~~~~~~~~~~~~~~
./Main.cpp:117:22: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  117 |         } else if (k == T.size() - 1 and l == T[0].size() - 1) {
      |                    ~~^~~~~~~~~~~~~~~
./Main.cpp:117:44: warning: comparison of integer expressions of different sign...