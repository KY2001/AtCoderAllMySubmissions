/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Kein Yukiyoshi
 */

#include "bits/stdc++.h"
#define int long long
#define FOR(i, a, b) for (int i = (int)(a); i < (int)(b); i++)
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define ALL(obj) begin(obj), end(obj)
#define MAX(x) *max_element(ALL(x))
#define MIN(x) *min_element(ALL(x))
#define LOWER_BOUND(A, key) distance(A.begin(), lower_bound(ALL(A), key))
#define UPPER_BOUND(A, key) distance(A.begin(), upper_bound(ALL(A), key))

using namespace std;
using ll      = long long;
const int MOD = (int)(1e9 + 7);
const int INF = (int)(1e13 + 7);

template <class T = int>
int in() {
  T x;
  cin >> x;
  return x;
}
int bpm(int x, int y) {
  if (x == 0)
    return 0;
  else if (y == 0) {
    return 1;
  }
  int ans = 1;
  x %= MOD;
  int digit = (int)((log((double)y) / log((double)2) / 1 + 1));
  for (int i = 0; i < digit; i++) {
    if (((y >> i) & 1u) == 1) {
      ans *= x;
      ans %= MOD;
    }
    x = x * x;
    x %= MOD;
  }
  return ans;
}

class DMultipleOf2019 {
public:
  static void solve(std::istream &cin, std::ostream &cout) {
    string S;
    cin >> S;
    vector<string> div1;
    vector<string> div2;
    int temp = 2019;
    for (int i = 1; temp * i <= 200000; i++) {
      string temp2 = to_string(temp * i);
      rep(j, temp2.size()) {
        if (temp2[j] == '0') {
          break;
        } else if (j == temp2.size() - 1 && temp2.size() == 5) {
          div1.emplace_back(temp2);
        }
      }
    }
    for (int i = 1; temp * i <= 200000; i++) {
      string temp2 = to_string(temp * i);
      rep(j, temp2.size()) {
        if (temp2[j] == '0') {
          break;
        } else if (j == 5) {
          div2.emplace_back(temp2);
        }
      }
    }
    int ans = 0;
    rep(i, S.size() - 4) {
      rep(j, div1.size()) {
        rep(k, div1[j].size()) {
          if (div1[j][k] != S[i + k]) {
            break;
          } else if (k == div1[j].size() - 1) {
            ans++;
          }
        }
      }
    }
    rep(i, S.size() - 5) {
      rep(j, div2.size()) {
        rep(k, div2[j].size()) {
          if (div2[j][k] != S[i + k]) {
            break;
          } else if (k == div2[j].size() - 1) {
            ans++;
          }
        }
      }
    }
    cout << ans << endl;
  }
};


signed main() {
  DMultipleOf2019 solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}
</pre>

			<h4>
				Submission Info
				
			</h4>
			
			<div class="panel panel-default"><table class="table table-bordered table-striped">
				<tr>
					<th class="col-sm-4">Submission Time</th>
					<td class="text-center"><time class='fixtime fixtime-second'>2020-04-26 22:32:30+0900</time></td>
				</tr>
				<tr>
					<th>Task</th>
					<td class="text-center"><a href="/contests/abc164/tasks/abc164_d">D - Multiple of 2019</a></td>
				</tr>
				<tr>
					<th>User</th>
					<td class="text-center"><a href="/users/KY2001">KY2001</a> <a href='/contests/abc164/submissions?f.User=KY2001'><span class='glyphicon glyphicon-search black' aria-hidden='true' data-toggle='tooltip' title='view KY2001's submissions'></span></a></td>
				</tr>
				<tr>
					<th>Language</th>
					<td class="text-center">C++ (GCC 9.2.1)</td>
				</tr>
				<tr>
					<th>Score</th>
					<td class="text-center">0</td>
				</tr>
				<tr>
					<th>Code Size</th>
					<td class="text-center">2607 Byte</td>
				</tr>
				<tr>
					<th>Status</th>
					<td id="judge-status" class="text-center"><span class='label label-warning' data-toggle='tooltip' data-placement='top' title="Wrong Answer">WA</span></td>
				</tr>
				
					<tr>
						<th>Exec Time</th>
						<td class="text-center">28 ms</td>
					</tr>
					<tr>
						<th>Memory</th>
						<td class="text-center">3864 KB</td>
					</tr>
				
			</table></div>

			
				<h4>Compile Error</h4>
				<pre>./Main.cpp: In static member function ‘static void DMultipleOf2019::solve(std::istream&, std::ostream&)’:
./Main.cpp:61:22: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   61 |         } else if (j == temp2.size() - 1 && temp2.size() == 5) {
      |                    ~~^~~~~~~~~~~~~~~~~~~
./Main.cpp:82:24: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   82 |           } else if (k == div1[j].size() - 1) {
      |                      ~~^~~~~~~~~~~~~~~~~~~~~
./Main.cpp:93:24: warning: comparison of integer expressions of different signedness: ‘long long int’ and ‘std::__cxx11::basic_string<char>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
   93 |           } else if (k == div2[j].size() - 1) {
      |                      ~~^~~~~~~~~~~~~~~~~~~~~
