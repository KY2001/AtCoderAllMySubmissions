/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Kein Yukiyoshi
 */

#include "bits/stdc++.h"
#define int long long
#define rep(i, n)           for (int i = 0; i < (int)(n); i++)         // [0, b)
#define rep2(i, a, b)       for (int i = (int)(a); i < (int)(b); i++)  // [a, b)
#define rep3(i, a, b)       for (int i = (int)(a); i >= (int)(b); i--) // reversed [b, a] so [a, a-1, a-2, ..., b]
#define FOR(i, a)           for (auto &i : a)
#define ALL(obj)            begin(obj), end(obj)
#define MAX(x)              *max_element(ALL(x))
#define MIN(x)              *min_element(ALL(x))
#define SUM(x)              accumulate(ALL(x), 0LL)
#define LOWER_BOUND(A, key) distance(A.begin(), lower_bound(ALL(A), key))
#define UPPER_BOUND(A, key) distance(A.begin(), upper_bound(ALL(A), key))

using namespace std;
const int MOD    = 998244353;
const int MOD2   = 1000000007;
const int INF    = (int)(1e13 + 7);
const double EPS = 1e-14;
const double PI  = acos(-1);

int CEIL(int a, int b) { return (a >= 0 ? (a + (b - 1)) / b : (a - (b - 1)) / b); } //ceil() for int
int mod(int a, int b) { return a >= 0 ? a % b : a - (b * CEIL(a, b)); }             //always return positive num
int pow_mod(int a, int b) {                                                         //return x^y in order(log(y))
  int res = 1;
  for (a %= MOD; b; a = a * a % MOD, b >>= 1)
    if (b & 1) res = res * a % MOD;
  return res;
}

struct mint {
  long long x;
  mint(long long x = 0) : x(mod(x, MOD)) {}
  mint operator-() const { return mint(-x); }
  mint &operator+=(const mint a) {
    if ((x += a.x) >= MOD) x -= MOD;
    return *this;
  }
  mint &operator-=(const mint a) {
    if ((x += MOD - a.x) >= MOD) x -= MOD;
    return *this;
  }
  mint &operator*=(const mint a) {
    (x *= a.x) %= MOD;
    return *this;
  }
  mint operator+(const mint a) const { return mint(*this) += a; }
  mint operator-(const mint a) const { return mint(*this) -= a; }
  mint operator*(const mint a) const { return mint(*this) *= a; }
  mint pow(long long t) const {
    if (!t) return 1;
    mint a = pow(t >> 1);
    a *= a;
    if (t & 1) a *= *this;
    return a;
  }
  // for prime mod
  mint inv() const { return pow(MOD - 2); }
  mint &operator/=(const mint a) { return *this *= a.inv(); }
  mint operator/(const mint a) const { return mint(*this) /= a; }
};
istream &operator>>(istream &is, mint &a) { return is >> a.x; }
ostream &operator<<(ostream &os, const mint &a) { return os << a.x; }

int H, W;
int process(int i, int a) {
  vector<int> temp = {i * W, (H - i) * a, (H - i) * (W - a)};
  sort(ALL(temp));
  return temp[2] - temp[0];
}
int process2(int i, int a) {
  vector<int> temp = {i * H, (W - i) * a, (W - i) * (H - a)};
  sort(ALL(temp));
  return temp[2] - temp[0];
}

class CChocolateBar {
public:
  static void solve(istream &cin, ostream &cout) {
    cin.tie(0);
    cout.tie(0);
    ios_base::sync_with_stdio(false);
    cout << fixed << setprecision(15);
    cin >> H >> W;
    int ans = INF;
    if (H % 3 == 0 or W % 3 == 0) {
      ans = 0;
    } else {
      ans = min(H, W);
    }
    rep2(i, 1, H) {
      int L = 0;
      int R = W;
      while (1) {
        int mid  = (L + R) / 2;
        int temp = process(i, mid);
        if (process(i, mid) <= process(i, mid - 1) and process(i, mid) <= process(i, mid + 1)) {
          ans = min(ans, process(i, mid));
          break;
        } else if (process(i, mid) >= process(i, mid - 1)) {
          R = mid;
        } else {
          L = mid;
        }
      }
    }
    rep2(i, 1, W) {
      int L = 0;
      int R = H;
      while (1) {
        int mid  = (L + R) / 2;
        int temp = process2(i, mid);
        if (process2(i, mid) <= process2(i, mid - 1) and process2(i, mid) <= process2(i, mid + 1)) {
          ans = min(ans, process2(i, mid));
          break;
        } else if (process2(i, mid) >= process2(i, mid - 1)) {
          R = mid;
        } else {
          L = mid;
        }
      }
    }
    cout << ans << endl;
  }
};


signed main() {
  CChocolateBar solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}
</pre>

			<h4>
				Submission Info
				
			</h4>
			
			<div class="panel panel-default"><table class="table table-bordered table-striped">
				<tr>
					<th class="col-sm-4">Submission Time</th>
					<td class="text-center"><time class='fixtime fixtime-second'>2020-11-04 05:26:18+0900</time></td>
				</tr>
				<tr>
					<th>Task</th>
					<td class="text-center"><a href="/contests/abc062/tasks/arc074_a">C - Chocolate Bar</a></td>
				</tr>
				<tr>
					<th>User</th>
					<td class="text-center"><a href="/users/KY2001">KY2001</a> <a href='/contests/abc062/submissions?f.User=KY2001'><span class='glyphicon glyphicon-search black' aria-hidden='true' data-toggle='tooltip' title='view KY2001's submissions'></span></a></td>
				</tr>
				<tr>
					<th>Language</th>
					<td class="text-center">C++ (GCC 9.2.1)</td>
				</tr>
				<tr>
					<th>Score</th>
					<td class="text-center">400</td>
				</tr>
				<tr>
					<th>Code Size</th>
					<td class="text-center">4319 Byte</td>
				</tr>
				<tr>
					<th>Status</th>
					<td id="judge-status" class="text-center"><span class='label label-success' data-toggle='tooltip' data-placement='top' title="Accepted">AC</span></td>
				</tr>
				
					<tr>
						<th>Exec Time</th>
						<td class="text-center">41 ms</td>
					</tr>
					<tr>
						<th>Memory</th>
						<td class="text-center">3668 KB</td>
					</tr>
				
			</table></div>

			
				<h4>Compile Error</h4>
				<pre>./Main.cpp: In static member function ‘static void CChocolateBar::solve(std::istream&, std::ostream&)’:
./Main.cpp:101:13: warning: unused variable ‘temp’ [-Wunused-variable]
  101 |         int temp = process(i, mid);
      |             ^~~~
./Main.cpp:117:13: warning: unused variable ‘temp’ [-Wunused-variable]
  117 |         int temp = process2(i, mid);
      |             ^~~~
